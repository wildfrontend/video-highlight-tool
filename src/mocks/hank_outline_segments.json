[
  {
    "title": "一、Hank 的個人背景與成就",
    "items": [
      {
        "label": "HackBear 模擬面試",
        "start_seconds": 2.76,
        "start": "00:00:02.760",
        "end": "00:00:30.560",
        "end_seconds": 30.56,
        "captions": "然後我們在模擬面試 我們線上進行一個 mock interview 對 然後那個題目也是我當下錄之前 大概前幾分鐘想的 對 那個題目我事前是真的不知道 對 真的不知道 完全沒有模擬過 然後大家反應也不錯 然後 Hank 其實是蠻厲害的 然後要不要稍微介紹一下自己的背景 因為我覺得你好像跟我講說 你不是台灣最屌的幾個職工系大學畢業 對 台灣就是大家比較知道的就是",
        "is_highlighted": false
      },
      {
        "label": "學歷（中央大學→交大）",
        "start_seconds": 36.92,
        "start": "00:00:36.920",
        "end": "00:01:11.400",
        "end_seconds": 71.4,
        "captions": "那後來研究所的話才去念交大 中央大學 然後 交大碩士 然後碩士完畢業之後就去上班 對 你現在的公司嗎 還是之前 我碩士完之後其實 因為那時候剛好碩士畢業的時候遇到 COVID 所以那時候所有公司其實都還在觀望 等於說他並不敢隨便招人 所以那時候我其實是面完試了 但是我一直被hold住 那中間我有先去研究院 因為我認識的教授 所以我去研究院幫教授做一些research的工作 對 後來才到我現在的公司 那你是在大學的時候就在做算法競賽嗎",
        "is_highlighted": false
      },
      {
        "label": "高中參與演算法競賽",
        "start_seconds": 71.4,
        "start": "00:01:11.400",
        "end": "00:01:27.360",
        "end_seconds": 87.36,
        "captions": "應該說我其實在高中的時候就在做算法競賽 當然我高中也不是說真的資訊相關很有名的高中 對 那我也是自己覺得 這東西蠻有趣的 進去嘗試一下 高中其實就算有做出一些成績 大家如果不知道的話 Hank是2019",
        "is_highlighted": true
      },
      {
        "label": "2019 ICPC 台灣區賽冠軍／世界總決賽第五",
        "start_seconds": 87.36,
        "start": "00:01:27.360",
        "end": "00:01:51.560",
        "end_seconds": 111.56,
        "captions": "是台灣區演算法競賽的冠軍",
        "is_highlighted": false
      },
      {
        "label": "LeetCode 全球前三，最高 3600",
        "start_seconds": 181.28,
        "start": "00:03:01.280",
        "end": "00:03:08.120",
        "end_seconds": 188.12,
        "captions": "那時候排下來大概是全球前三的成績 對 那還蠻厲害的 做這些競賽啊",
        "is_highlighted": true
      },
      {
        "label": "刷題＝思考的興趣",
        "start_seconds": 188.12,
        "start": "00:03:08.120",
        "end": "00:03:51.560",
        "end_seconds": 231.56,
        "captions": "寫這些Nicole是你自己的興趣嗎還是 算是我自己的興趣吧 就是我覺得它就是給我 就是有在思考的感覺 可是我覺得這還蠻奇特的一個興趣 就我所知大部分的軟體工程師是不喜歡耍Nicole 就這個東西是因為我們需要面試 我們需要找工作我們才去做這件事情 那聽起來好像是你是因為自己喜歡 你才去做這件事情 應該說因為像這種題目其實以前就存在 Nicole這個東西也可能出現到現在也沒有很久 但是其實像這種類型的題目二三十年前就有 如果大家有去查過 其實很多Nicole的題目都是從某些地方給搬過來的 可能簡化一下稍微搬過來的 就是比起在刷的那種感覺 我覺得我比較喜歡就是我去 就是寫那種原創的題目",
        "is_highlighted": false
      },
      {
        "label": "偏好原創題的拆解",
        "start_seconds": 231.56,
        "start": "00:03:51.560",
        "end": "00:04:02.600",
        "end_seconds": 242.6,
        "captions": "等於說我是真的去拆解那個題目的感覺 而不是把一個算法背起來 對對對 就真的是一個problem solving的一個題目 對 喔對我記得好像以前其實 像我記得我做Nicole的時候",
        "is_highlighted": true
      },
      {
        "label": "HackerRank 更像真實問題",
        "start_seconds": 242.6,
        "start": "00:04:02.600",
        "end": "00:05:47.720",
        "end_seconds": 347.72,
        "captions": "之前很久以前也做過有一個叫HackerRank 而且還有另外更早的類似Nicole 他們的題目都是更像一個真正是一個problem 對 不像Nicole這麼簡短 就是像是面試裡面可以一個小時內完成那種 對 OK所以你以前是做那種類型的題目 對那種類型的題目 就是我們以前做的題目就是 可能還會有包裝一個很長的故事敘述 像是真的像是軟體工程師在解題那種感覺 沒有那麼的像是去為了面試而做的 對對對 然後你自己是真的喜歡做那個東西 對因為就是我會好奇出這個題目的人 想法為什麼會是這樣子 他怎麼想出這道題目 OK你的好奇心就是 源自於說你想要解決這個問題 然後你好奇為什麼他要出這個題目 對好奇他怎麼想到有這些關係的 那你一開始是怎麼進來 決定說你要做這個刷題比賽啊 或是參加一些比賽 因為我高中就有打出一些成績 就是我高中有去不小心打進那個奧林匹亞的選訓營 OK 對 不小心打進 真的真的不小心打進 因為那時候我什麼都不會 基本上就只會for回圈跟開一個陣列 然後可能一些簡單的recursion這樣子 那時候我什麼演算法都不懂 對 對但是我就是看著題目 然後印造了題目 然後把它轉換成程式去寫 那時候我想說我竟然不小心進到這個比賽 然後就在裡面認識一些很厲害的 對那我就覺得好像 原本他們可能是一些我覺得我無法觸及的 那他們學校比較好 然後可能能力也很強這樣子 從那時候開始我就覺得 其實他們並不是那麼無法觸及的 就是還是普通人 就可能花比較多時間去準備 那你當時在進入算法競賽的時候 一直到現在 你有大概算過自己刷了幾道題嗎 應該有破千吧",
        "is_highlighted": false
      },
      {
        "label": "累積六七千題",
        "start_seconds": 347.72,
        "start": "00:05:47.720",
        "end": "00:07:48.880",
        "end_seconds": 468.88,
        "captions": "六七千 六七千 六七千 六七千道題那很屌 你完全不會覺得刷題是一個負擔 我覺得就像有人喜歡打電動一樣 那就是大家喜歡的東西不一樣 應該說我不會把它當成我在刷題目 而是我把它當成我在思考 因為據我所知大部分軟體工程師 想到刷題就覺得很想死 對因為 就是一個很煩 因為我覺得就是大家就變成 好像在背這個題目的做法 對那我自己覺得 這個東西帶給我最大的就是 我不是去背那個做法 而是我去思考說這個做法是怎麼出來的 因為其實拆解到最後 它都是一些大家能想到的東西 甚至可能大家學過 可能國中小的數學 就是最基本的回圈啊 function啊 或是什麼開個陣列之類的 其實拆解出來都是這些東西 對 就你喜歡把一個很複雜的東西 把它拆才拆到最後 對對對對 才會變小 然後把它解出來 對 你之前跟我講過 你一開始會想要刷題 因為你讀的大學不是一個 對 不是台灣前三 對 其實這種比賽因為 通常都是台心教的 對 因為都跟學科有關係嘛 那大家也都知道 學科的話台心教 這些人一定是最厲害的 以前都是被這三所學校的人霸榜 那我只是我自己的想法是說 欸我如果能以一個 欸以前沒有出現過的學校 可以不小心出現在前幾名 就感覺很有趣 有趣對不對 但以往就是都台心教站在前面嘛 對 以往都台心教站在前面 然後所以你們算是你們學校之光對不對 算是 算是 這樣講嗎 很謙虛 對 我入學那時候還有一個人也蠻強的 就是台心教中間有競爭成功過 那我只是想說 欸人家有辦法做到 我應該也可以做到 因為畢竟就是寫這種程式來講 這種東西網路上都有 都大部分都有資源 對 那其實大家可以獲得的資源量 我認為都是相同的 不會有說什麼台大有自己藏起來的東西 對沒有 我是資源都是可以找到的 對 因為我覺得程式這方面都是長這樣 就是全部都是網路上可得的資源 你要操作這些東西 只要一台電腦可以執行程式的地方就可以",
        "is_highlighted": true
      }
    ]
  },
  {
    "title": "二、Hank 的求職與面試經驗",
    "items": [
      {
        "label": "現職於台灣知名外商（G 公司）",
        "start_seconds": 468.88,
        "start": "00:07:48.880",
        "end": "00:08:16.240",
        "end_seconds": 496.24,
        "captions": "像 Hank 現在是在台灣某知名的外商公司工作 我們可以講是 GMO 嗎 對 GMO 沒關係我覺得其實大家也去查 大家查我的名字應該都查得到 對 因為我其實之前有跟 Hank 稍微聊一下 就是基本上所有的公司對你來講 其實技術面試都不是一個難的地方 你會 fail 的地方會是偏向哪些 我進到我現在的公司 其實也不是說我一面就上",
        "is_highlighted": false
      },
      {
        "label": "曾三度面試失利（2 實習／1 正職）",
        "start_seconds": 496.24,
        "start": "00:08:16.240",
        "end": "00:08:57.200",
        "end_seconds": 537.2,
        "captions": "我其實中間還是陸陸續續有失敗過三次 就是兩次是實習 就 intern 的時候面試 fail 然後一次是正職的時候 如果你有認識相關的 很多都是大學畢業直接就進去了 可能最近比較多 但以前就很少是那種 真的是到碩士才開始去面的 就是如果他真的是出一道題目給你 敘述完整的題目給我 那其實我解出來是沒有問題的 但是其實面試中還有很多 除了把題目解出來之外 還有很多其他部分要注意 你會故意放慢腳步 就是故意就是不要太快解出來 我覺得我不會 因為我覺得這件事情沒有意義 對 你會比較快就是 按照你自己正常的步調去答 對 但像我前面 我前面就是失敗了三次 其實三次我都有找出 自己的原因是什麼 第一次的時候就是",
        "is_highlighted": false
      },
      {
        "label": "失敗原因：卡題未接住提示、協作不足",
        "start_seconds": 537.2,
        "start": "00:08:57.200",
        "captions": "我是解得出來但是表演卡住了 變成我一直在自己的想法裡面 去思考這個答案 當時面試官是有給我 hint 但是我沒有 get 到 對 就有點鑽牛角尖的感覺 那其實我現在來看就是 那我會覺得當時的我 不是一個可以 co-work 的人 變成你沒有辦法聽進去別人的意見 你會一直在自己的世界裡面循環 但因為你做一個大的軟體 你不可能單打獨鬥 面試很重要的一點就是 跟團隊合作 後面幾次面試的原因 有幾點就是第一個是 曾經被講過就是 思考太跳躍 等於說有些東西我可能 覺得是理所當然 但是我沒有描述出來 對 這個就是有一種叫什麼 我曾經聽過一個講法叫什麼",
        "is_highlighted": true,
        "end": "00:09:35.160",
        "end_seconds": 575.16
      },
      {
        "label": "失敗原因：知識的毒藥、描述不完整",
        "start_seconds": 575.16,
        "start": "00:09:35.160",
        "end": "00:11:06.960",
        "end_seconds": 666.96,
        "captions": "知識的毒藥 不是 你去 assume 它可能 知道一些東西 對 你有這個知識但對方沒有 變成你講出來的話 對方沒有辦法 get 到 第三點我覺得我當時的 feel 的原因就是 對自己寫的程式太有自信 在寫軟體的時候 就算你程式寫出來是對的 這還是一個大忌 因為當時他就出一個很簡單的題目 就大概兩三行就寫完 然後他就問我有沒有要檢查 我說我看一看我覺得沒有問題 我就跟他講沒有問題 但實際上就是你 你今天寫完一個程式 你一定要測試嘛 那我沒有做到測試這件事情 你沒 dry run 對 我沒有 dry run 那那時候其實 我大三大四的時候 其實這些 interview 的資訊 還沒有那麼 open 就是這些資訊沒有那麼流通 也沒有像現在 YouTube 上 有很多 market interview 的資訊 那所以我就是照自己的想法去走 那時候不懂嘛 對 就沒有那個經驗 面試那個經驗去 feel 掉 然後你也是經歷過不少的這種找工作 然後慢慢去了解 怎麼樣在 interview 上面才 去給面試官知道他們想要他們的東西 其實我覺得當初如果 我沒有這些 feel 的經驗 我現在在工作上可能也會遇到很多瓶頸 因為他每一次 feel 就讓我 反思自己除了血扣之外 還有哪裡是不足的 因為這些東西其實 對一個軟體工程師來講 也是一個很重要的事情 嗯 台灣科技業軟體啊 軟體這部分 其實天花板大概是哪幾家公司啊 如果以新鮮人來看 其實竹科的是 然後就是如果在台北的話 就是一些外商公司 台積電 聯發科什麼的 以整個發展性來講 我個人的感覺是 如果竹科那些公司會 等於說後面成長會比較慢",
        "is_highlighted": false
      },
      {
        "label": "台北外商 vs 竹科的成長差異",
        "start_seconds": 666.96,
        "start": "00:11:06.960",
        "end": "00:11:57.320",
        "end_seconds": 717.32,
        "captions": "但是如果在台北的外商的話 就是當然你能力好的話 會成長很快 但如果你能力不好 會比竹科那些人更慢 雖然有人可能說我們公司很養老 但是就是 還是要有一定的成長才行 像有些公司可能就是看年資嘛 就像有些人講的 就是你十年都在做一樣的事情 但是你還升得上去 但如果在就是這些外商公司 可能這樣就沒有辦法做到 你可能就一直卡在一些 junior 的 level 哦 台灣軟體是不是分兩派 一個是外商派系 一個是竹科派系 對 我覺得主要是這樣 因為大家講的軟體可能都比較偏 真的面向 user 那一種 但竹科那些可能就不是面向 user 那一種 就變成 比較底層的 對對對 那你覺得 Likko 因為你算是 我是沒有遇到另外一個 Likko 比你強的 算法比你強的 我真的沒有遇到另外一個 因為我知道現在最大的爭論就是說",
        "is_highlighted": true
      }
    ]
  },
  {
    "title": "三、AI 時代下刷題的意義與挑戰",
    "items": [
      {
        "label": "為何 AI 時代仍考刷題？",
        "start_seconds": 717.32,
        "start": "00:11:57.320",
        "end": "00:12:00,760",
        "end_seconds": 720.76,
        "captions": "Likko 的東西都是 AI 可以寫出來的",
        "is_highlighted": false
      },
      {
        "label": "誠信原則：假設未使用 AI",
        "start_seconds": 744.84,
        "start": "00:12:24.840",
        "end": "00:13:47.360",
        "end_seconds": 827.36,
        "captions": "這就是一個誠信原則 就是如果你在外商公司你也知道 其實誠信是一件很重要的事情 因為如果大家都基於誠信原則的話 其實會少掉大家很多的麻煩 因為很多大家基於員工跟老闆之間不信任 所以才產生的 其實這些我覺得都造成很大的 cost 那另外一點就是 我覺得 AI 現在還是 就是它是針對題目去解 它們 你說它有在思考 它可能就是做更多的不同的組合去做思考 但是我覺得跟人的想法還是有差別 就像我很享受把題目拆解成小東西的過程 但是我覺得這點 你說 AI 可以做到 我其實現在還是有點疑問的 因為我覺得 AI 就是 它這題目可能看過類似的 它可以把世界上所有的題目都看過一遍 那重點是我們在 我們沒有看過的題目上 就像我們真的在工作上 一定會遇到 應該說這件事情是常態 就是你遇到一個沒有遇過的題目 那有些如果你做的專案比較小的話 那可能網路上就有一些現成的做法 那如果你做的一些是以前沒有人做過 像一些大公司你做的是 bidding user 的東西 那 bidding user 的東西其實以前並沒有人做過 那你怎麼把這件事情給拆分成幾個可能的東西 那甚至再拆分下去 最後還是會到一個有人做過的事情 但這些拆分的過程我覺得是 目前你說 AI 可以做到 我會抱持個疑問 對 我自己是覺得說 就你給它一個很明確的 requirement 它可以寫出來一個很好的一個答案",
        "is_highlighted": false
      },
      {
        "label": "AI 限制：模式識別、未見問題、happy path、邊界與除錯",
        "start_seconds": 827.36,
        "start": "00:13:47.360",
        "end": "00:14:37.880",
        "end_seconds": 877.88,
        "captions": "應該說一個它可以把 happy path 寫得很好 那實際這個東西能不能用在 真實的 production 環境裡面 你需要去考量很多 edge case 對 那可能這方面 AI 不會考量那麼多 對 所以說你還是需要很多的 debugging 的一些 skill 對 那寫 legal 的話很多的部分 其實不只是在把這個答案完美的詮釋寫出來 對 你還需要去 dry run 很多 test case 你要想怎麼樣情況的答案會 fail 對 然後這是我自己面試以來 這麼多年面試以來的一個經驗 就是面試官其實考的很多 是看怎麼去跑你自己寫的程式 嗯 對 現在很多網路上的人就會講說 AI 可以處理大概七八成的問題 那剩下就是我們要去 debug 那其實你在寫 legal 的時候 你也很大程度在訓練你在 debug 的能力 還有一點就是我覺得考 legal 的題目是 成本最低",
        "is_highlighted": true
      },
      {
        "label": "對公司：低成本快速篩選與品質把關",
        "start_seconds": 877.88,
        "start": "00:14:37.880",
        "end": "00:17:23.160",
        "end_seconds": 1043.16,
        "captions": "然後最能快速篩選掉一些不符合資格的人 儘管這些東西 AI 可以寫 但是你還是要 miss 因為我們要招人理工程師 你還是得招人 所以說那你還是得出一些東西 目前來講我覺得沒有一個比這個還要更有效 當然有很多有效的 但是就是你會需要很多時間 我覺得其實更有效的方法其實應該是 其實我跟這個 candidate 做一個一整天的這個 co-working 的一個 session 跟他工作一整天 然後我可以去 evaluate 他的這個能力 但是大公司要招人 你一次就是好幾千個人進來 那你怎麼可能去用資源去這樣子去篩選 嗯 對啊 所以說我覺得就是在 2025 年 找工作還是一個很重要的一個指標 就是因為沒有其他更好的方式去快速篩選 我覺得這個就是大公司會比較傾向 就是我盡量篩選進來的人都是有能力 那他其實並不會 care 說有能力的人被我篩掉 對 而且他想要招人就是願意花時間努力的人 嗯 對 就是大家都知道你去練 lico 這也是一個公開的事情 大公司會告訴你說 你在面試前你要去準備 lico 你可以準備 lico 我覺得他們想要找的人 是真的是有認真在準備的人 這也是一個很重要的 quality 然後另外就是很久以前 我也是非常認真的去刷過一遍 lico 主要是為了找工作 我自己覺得就是刷完 lico 跟沒刷 lico 之前你在公司裡面寫那些 code 的那個 quality 還是有差的 就我自己有這樣覺得 那你覺得就是你 lico 這麼強 算法那麼強 對你在工作上面有沒有實質上面的幫助 我講一個例子好了 雖然這個東西是我在我還沒進現在公司 我可能在實驗室的時候幫老師做的事情 那當時他們針對一個東西 給一個很複雜的 design 然後後來我發現 其實他就用一個算法就可以做掉 我覺得這差別就是 你的認知有沒有到那個程度上 那如果你沒有到那個程度上 你根本不會發現 你也不會認為這個東西有一個簡單的做法 你去刷 lico 代表說你把這些知識給補足了 那有些東西你就不用那麼複雜 不用考慮到那麼多 case 那另外一點就是你在寫 lico 的時候 你除了把答案抄上來之外 其實你自己寫答案的過程你會 像我自己我在做這些題目的時候 今天我寫錯了 然後可能去看答案 那想說我的做法到底錯在哪裡 在寫這個的時候 為什麼沒有想到這個方向會錯 那甚至我有些 edge case 沒考慮到 我就會去想說在當下 我應該要怎麼把這個 bug 理出來 這帶到工作上就是 我們很多時候就是他沒有一個答案 但我們還是要去 debug 我們也沒有答案給我們抄 那變成就帶給我在這類型的工作上 可以讓我很好地去做 debugging 的動作 尤其是像現在 AI 大家就說我們現在就是要幫 AI debug 我覺得這是一個超級重要的動作 而且其實我發現 AI 他有時候寫出來的東西 他不是最好的方式去寫出來 你 lico 做多的時候 有時候會看到他寫 到底在寫什麼鬼東西 有時候我會發現這個東西 就是他寫的東西就是 他不會用最好甚至不是最優解 就是他有時候會用一些很奇怪的方式去寫 然後這些就是你自己對 code 的敏銳度 敏銳度的話你會看得出來 對 然後我覺得還有一個就是",
        "is_highlighted": true
      },
      {
        "label": "對個人：品質、簡化與認知提升、prompt 助益",
        "start_seconds": 1043.16,
        "start": "00:17:23.160",
        "end": "00:19:01.160",
        "end_seconds": 1141.16,
        "captions": "你在做 prompt 這個過程 其實就相當於我剛剛在講 你在拆解這個問題的過程 這也是我在 lico 中學習到 那變成我其實對 AI 可以很精準地下指令 他就會產出我要的東西 那你覺得現在科技業招人的這個生態 有沒有因為 AI 的原因 bar 變得高很多 我覺得現在大家就是偏比較保守 就是大家還在觀望 因為有人說 AI 可以取代 然後先裁掉一部分的人這樣子 大家就是比較保守 所以他會盡量把 bar 拉高 那當然 bar 拉高你可能會塞掉 有能力的人機率變高 但其實大公司又不在意 對 他就盡量讓進來的人 確保他的能力是越來越高的這樣子 所以我覺得他有 bar 變高的趨勢 但有些公司可能 他的 bar 會變得比較奇怪 他會著重在一些不是很重要的事情上 就是他會去考一些很尖酸的算法 我覺得考那些東西沒有什麼太大意義 沒有太大意義 就看你會不會背 就是看你有沒有剛好看到的東西而已 那這些算法你都有 譬如說我現在當下考你 你是可以寫出來 對 這些我都可以寫出來 你是背下來 我是理解下來 理解下來 然後可以直接馬上寫出來 基本上這些算法 我都有自己的一套理解方式 一個叫什麼經典資料結構是那個嘛 try 字連數 那些東西其實很多人 可能沒有辦法當場寫出來 以我自己理解方式的話 我可以直接當場寫出來 然後很多比較高級的算法 你也是都是練過的 對 我這些都練過 那有沒有什麼是你覺得對你來講 你會比較害怕哪樣類型的考官 或是哪樣類型的題目 哪樣類型的考官 聽起來好像沒有 因為 technical 上沒有 但是我覺得就是其他地方會有 我覺得考這個東西沒有意義 但是我當下真的會回答不出來 如果真的沒有用過我沒有辦法",
        "is_highlighted": false
      }
    ]
  },
  {
    "title": "四、對面試的額外建議",
    "items": [
      {
        "label": "不喜考特定 API（如 React、64 位浮點）",
        "start_seconds": 1141.16,
        "start": "00:19:01.160",
        "end": "00:19:34.200",
        "end_seconds": 1174.2,
        "captions": "我是遇到有人考我那個什麼 React API 就是我用過但是就最後忘記 那我覺得這個東西就是 你上網查就好 我有遇過考我那個 如果大家有學過浮點數 64 進位浮點數 他就考我那 64 個 bit 分別在幹嘛 那時候因為我還有印象 然後我是靠範圍給他硬推出來的 不知道你考這個要看意義是什麼 好像是考有沒有背起來的感覺 好 非常感謝 Hank 特別來這邊跟大家聊一下這些東西 好啦 那希望今天這集影片對你有幫助 我跟 Hank 專門為軟體工程師還有轉職者 設計了質押護城河實戰營",
        "is_highlighted": false
      }
    ]
  },
  {
    "title": "五、職涯護城河實戰營推廣",
    "items": [
      {
        "label": "8/15 開課，課程與講義、自學指南",
        "start_seconds": 1174.2,
        "start": "00:19:34.200",
        "end": "00:19:48,200",
        "end_seconds": 1188.2,
        "captions": "我們終於要在 8 月 15 號正式開課了 所有線上課程的內容 講義還有零基礎 專門給新手自我學習自我練習的指南 全部都會在我們的平台上面開放給實戰營的學員 然後 10 月份開始",
        "is_highlighted": false
      },
      {
        "label": "10–12 月 Live 實戰，每週加碼兩次",
        "start_seconds": 1188.2,
        "start": "00:19:48.200",
        "end": "00:20:32.920",
        "end_seconds": 1232.92,
        "captions": "就會是我們的線上 live 實戰演練的部分 本來的計畫是一週一次 但是我們後來發現 學員的這個程度可能有點不同 所以說經過我跟 Hank 討論之後 我們打算加碼到最少一週兩次 有可能還會更多 所以說我們會針對不同程度的學員 會有不同的 live 實戰演練 當然你也歡迎來全部都參加 那這個會直接 run 到 12 月底 讓大家都有更多的機會可以參與 這個部分也是我覺得我們的實戰營 跟其他線上課程最不一樣的地方 我們是希望你可以真的在這邊 透過跟我們一起跟所有人一起練習 然後真的變強 把你的護城河還有你的基礎全部一次補齊 而不是說就是看看影片就沒事了 你是需要上線真的跟我們一起做這件事情 好那也跟大家稍微透露一下",
        "is_highlighted": false
      },
      {
        "label": "重實作、不只看影片；業界大神分享",
        "start_seconds": 1232.92,
        "start": "00:20:32.920",
        "end": "00:20:53.480",
        "end_seconds": 1253.48,
        "captions": "我們的專業分享會請業界非常非常厲害的人來 有一個人我真的覺得就是一個大神級別的人物 來跟實戰營的同學們一起來分享交流 我這邊說的大神級別是一點都沒有在誇張 我是真的膜拜 專業分享也是從 10 月開始 所以大家絕對不要錯過了 現在還是一個非常好的時機可以加入我們 而且我們的官方網站價格呢",
        "is_highlighted": true
      },
      {
        "label": "七天限定九折優惠",
        "start_seconds": 1253.48,
        "start": "00:20:53.480",
        "end": "00:21:06,120",
        "end_seconds": 1266.12,
        "captions": "早鳥優惠已經結束價格已經調升了 但是現在如果你用我影片底下資訊欄的連結呢 接下來的 7 天 就可以在現在折扣上面再享 9 折的優惠 所以大家絕對不要錯過了 一起來加入我跟 Hank 變強吧",
        "is_highlighted": false
      }
    ]
  }
]
